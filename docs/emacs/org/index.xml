<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>org &amp;&amp; gtd on 飘</title><link>https://www.wcq.life/docs/emacs/org/</link><description>Recent content in org &amp;&amp; gtd on 飘</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 31 May 2024 07:02:30 +0000</lastBuildDate><atom:link href="https://www.wcq.life/docs/emacs/org/index.xml" rel="self" type="application/rss+xml"/><item><title>org</title><link>https://www.wcq.life/docs/emacs/org/org/</link><pubDate>Thu, 30 May 2024 20:33:00 +0000</pubDate><guid>https://www.wcq.life/docs/emacs/org/org/</guid><description>org-mode一直被称为神器 主要有2大功能, 一是自身强大的文本模式(依赖 org-mode), 另一个则是 org-agenda 推荐阅读: org心得体会 配置 # org作为文本模式配置较少, 更多的是配置org-agenda为GTD管理工具. org文本模式下, 配置简单外观 以及 Babel-languages org-agenda的配置可参考init-org-agenda.el和一系列自定义函数 使用 # font format # key format normal = monospace ~ key-binding + strike-through _ underline 基本语法 # 语法: time-stamp选择 # 添加time-stamp时, 不要在calendar中移动,效率太低 使用以下2种方式即可: 使用简约的时间格式 17-1-1 =&amp;gt; 2017-01-01 使用时间间隔 now = [2016-12-28 Wed] +1d =&amp;gt; 2016-12-29 具体见(dir) - Org mode - Dates and times - Creating timestamps - The date/time promt 语法: 时间repeate # org-mode repeate格式 .</description></item><item><title>gtd</title><link>https://www.wcq.life/docs/emacs/org/gtd/</link><pubDate>Thu, 30 May 2024 20:41:00 +0000</pubDate><guid>https://www.wcq.life/docs/emacs/org/gtd/</guid><description>为什么要用GTD # 每天或每周需要处理的事情非常之多, 小到晚上要洗衣服, 大到明天项目交付. 这些事情如果都存储在脑中, 轻则焦虑不堪, 重则脑子爆炸. 而且脑中一旦塞满了这类事情, 非常不利于思考. 大脑应该是拿来思考的, 而不是用来存储的. 假设一种情形, 大脑只用来思考, 而存储则放在大脑之外, 那么我们就不必因当下之外的事情而焦虑, 能够更专一的处理当下的问题. 同时, 如果外在存储能够提醒我们何时该思考何问题, 那么我们也不会因错过了某事而悔恨, 比如女友生日. 而这也是GTD的目的所在, 大脑只用来思考, 存储在脑外. GTD是什么 # 人生5楼 # 了解GTD之前, 必须了解 人生5楼. 楼数 功能 说明 备注 5楼 人生规划 4楼 3年目标 3楼 1年目标 2楼 职责范围 1楼 项目 GTD管理 地面 行动清单 归属1楼 GTD管理 把人生(或部分人生)比喻成一座大厦, 1楼是我们当下要做的事情, 2楼是我们的职责范围, 3楼是我们1年后的样子, 4楼是我们3年后的样子, 5楼是我们人生(10年, 20年或一辈子)的规划. 我们的人生是高层决定了低层 比如, 如果想成为计算机专家(5楼), 那么3年后要先成为工程师(4楼), 1年后要先成为程序员(3楼), 为了要成为程序员, 也许我们需要去报班学习(2楼 职责为学习),或者成为程序员助理(2楼 职责为搬砖), 而1楼则是我们当下要确确实实需要处理的事情, 比如看书, 工作, 交流等, 所有一切能对我们有提升的事情.</description></item><item><title>org &amp;&amp; gtd</title><link>https://www.wcq.life/docs/emacs/org/org_gtd/</link><pubDate>Thu, 30 May 2024 20:51:00 +0000</pubDate><guid>https://www.wcq.life/docs/emacs/org/org_gtd/</guid><description>需求分析 # 所有的设计都是基于需求的, 应该先有需求, 再去设计. 当前的需求: 有哪些task 他们归属于哪个PROJECT 他们的四象限: 紧急&amp;amp;&amp;amp;重要 工作量预估 关联性 A task可能与B, C相关联 TODO 该任务并未完成 当前正在处理的任务 尽可能的关注当前, 忽略其他 当某个task进行时, 快速capture我的想法, 并且自动refile 看到自己花费的时间 一天,一周都做了什么 某个PROJECT总共花费的时间 流程的设计 # -------------------------+------------------------|| capture (easy)||varchive +---------++-------------------| inbox || +----+----+| || | refile (auto)| || || |----------------+--------------------|| | | || | v v| v +---------+ +---------+| +---------+ | my/emacs| | work/qy || | task | | * emacs| | * ker || +----+----+ | * org | | * frame|| | | * ccIDE| | * sub || | +---------+ +---------+| || | archive (auto)| || v| +---------++-&amp;gt;| archive |+----+----+文件的设计 # 区分目录是为了更好的给PROJECT做分类处理, 使后续的统计查看更方便.</description></item><item><title>org exprot &amp;&amp; ox-hugo</title><link>https://www.wcq.life/docs/emacs/org/org_export/</link><pubDate>Wed, 29 May 2024 15:11:00 +0000</pubDate><guid>https://www.wcq.life/docs/emacs/org/org_export/</guid><description>&lt;p>org自带强大的export功能. &lt;br/>
但更多的是使用ox-hugo导出hugo样式的md, 再使用hugo生成html. &lt;br/>&lt;/p></description></item></channel></rss>