<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>prog language on 飘</title><link>https://www.wcq.life/docs/prog_language/</link><description>Recent content in prog language on 飘</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 28 May 2024 11:32:52 +0000</lastBuildDate><atom:link href="https://www.wcq.life/docs/prog_language/index.xml" rel="self" type="application/rss+xml"/><item><title>elisp</title><link>https://www.wcq.life/docs/prog_language/elisp/</link><pubDate>Thu, 18 Jan 2024 18:34:00 +0000</pubDate><guid>https://www.wcq.life/docs/prog_language/elisp/</guid><description>参考文档 水木社区Emacs版 lisp的本质 基础语法 # 函数重载 # elisp没有重载的概念, 直接覆盖原定义即可. 相关函数: advice-add 根据key来决定old_fun 与 new_fun的关系 key desc filter-return 先执行old. new对old的结果再处理 before 先执行new, 过滤一下数据, 再把结果给old arround 先执行new, 并在new中主动调用old(也可以不调用) 使用defune 覆盖原函数定义 如果只是重载, 应该使用这种方法. advice-add的本意不是用来override elisp &amp;amp;&amp;amp; shell # bash调用elisp # elisp代码写入el文件(eshell script) bash调用emacs执行el文件 # 实际还是emacs 执行的elisp代码emacs -u clay --script /Users/clay/.emacs.d/lisp/fun/init-hexo-fun.elelisp 调用bashe # (setq my-command(concat &amp;quot;IFS=: read -ra dirs &amp;lt;&amp;lt;&amp;lt;\&amp;quot;$PATH\&amp;quot;\n&amp;quot;&amp;quot;for dir in ${dirs[@]}; do\n&amp;quot;&amp;quot; echo got dir \&amp;quot;$dir\&amp;quot;\n&amp;quot;&amp;quot;done\n&amp;quot;))(shell-command (format &amp;quot;bash -c %s&amp;quot; (shell-quote-argument my-command)))</description></item><item><title>shell</title><link>https://www.wcq.life/docs/prog_language/shell/</link><pubDate>Thu, 18 Jan 2024 19:09:00 +0000</pubDate><guid>https://www.wcq.life/docs/prog_language/shell/</guid><description>&lt;p>shell 记录 &lt;br/>&lt;/p></description></item></channel></rss>