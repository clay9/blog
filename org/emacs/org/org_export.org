#+title: org exprot && ox-hugo
#+date: 2024-05-29 15:11:36
#+hugo_section: docs
#+hugo_bundle: emacs/org/org_export
#+export_file_name: index
#+hugo_weight: 10
#+hugo_draft: false
#+hugo_auto_set_lastmod: t
#+hugo_custom_front_matter: :bookCollapseSection false

org自带强大的export功能.
但更多的是使用ox-hugo导出hugo样式的md, 再使用hugo生成html.

#+hugo: more

* ox-hugo
** 常用样式
*** basic
    | key | format         |
    |-----+----------------|
    |     | normal         |
    | /   | /italics/        |
    | =   | =monospace=      |
    | ~   | key-binding    |
    | +   | +strike-through+ |
    | _   | _underline_      |
    |-----+----------------|
*** literal
    org 自带, literal相关
    - example
    - center
    - quote
*** html
    org 自带, html或html5
    - details :: 注意与hugo自带的shortcode 'deatails'区分
    - summary
*** hugo shortcode
    使用的是 =hugo book theme=, 所以这里只列出与之相关的
    [[https://hugo-book-demo.netlify.app/docs/shortcodes/columns/][官方具体例子]]

    - columns
    - hints

** 图片导出逻辑
   #+begin_src plantuml :exports results :eval no-export :file ox-hugo-export.png
     @startuml
     /'
     line direct:  -le|ri|up|do->
     line style :  #line:color;line.[bold|dashed|dotted];text:color
     '/

     'top to bottom direction
     'left to right direction

     'skinparam linetype polyline
     'skinparam linetype ortho

     'skinparam nodesep 10

     title export pics

     start
     if (in hugo static-dir) then (yes)
         stop
     else (no)
         if (bundle) then (yes)
             : export pics with bundle;
         else (no)
             if (open_copy) then (yes)
                 : copy to hugo static-dir;
             else (no)
                 stop
             endif
         endif
     endif

     stop
     @enduml
   #+end_src

   #+RESULTS:
   [[file:ox-hugo-export.png]]
* org-mode & ox-hugo & hugo & hugo-book
  代码块的角度来看.
** org-mode 原生支持的代码块可以分为2部分
  - org normal
    center, example, quote...
  - org babel
    artist, c++, emacs-lisp, shell...
  - org export to html时候的代码块
    : 不推荐使用这种类型的导出
    org-blackfriday-html5-inline-elements
    org-html-html5-elements

    ("abbr" "audio" "bdi" "bdo" "button" "canvas" "cite" "data" "datalist"
  "del" "dfn" "embed" "iframe" "input" "ins" "kbd" "label" "map" "mark"
  "meter" "noscript" "object" "output" "picture" "progress" "q" "ruby"
  "s" "samp" "script" "select" "slot" "small" "span" "svg" "template"
  "textarea" "time" "u" "var" "video")


  ("article" "aside" "audio" "canvas" "details" "figcaption" "figure"
  "footer" "header" "menu" "meter" "nav" "output" "progress" "section"
  "summary" "video")

** ox-hugo只是翻译工作, 把org-mode翻译为markdown
  代码块的工作原理:

  1. org normal && org babel
     #+begin_example
     #+begin_sh
     something
     #+end_sh

     # 翻译为:
     ```sh
     something
     ```
     #+end_example

  2. org-blackfriday-html5-inline-elements
     #+begin_example
     #+begin_INLINETAG
     something
     #+end_INLINETAG

     # 翻译为:
     <INLINETAG>something</INLINETAG>
     #+end_example

  3. org-html-html5-elements
     #+begin_example
     #+begin_BLOCKTAG
     something
     #+end_BLOCKTAG

     # 翻译为:
     <BLOCKTAG>

     something

    </BLOCKTAG>
     #+end_example
  4. mardown解析器不是别的代码块 && 且自定义代码块 hugo_paired_shortcodes: myshortcode
     #+begin_example
     begin_myshortcode
     Something
     end_myshortcode

     # 翻译为:
     myshortcode
     Something
     /myshortcode
     #+end_example

     #+begin_example
     # 省略key, 直接下value也是可以的
     attr_shortcode: :arg1 foo bar :arg2 color: red; text-align: center;
     begin_myshortcode
     Something
     end_myshortcode

     # 翻译为:
     myshortcode arg1="foo bar" arg2="color: red; text-align: center;"
     Something
     /myshortcode
     #+end_example
  5. mardown解析器识别的代码块 && 且自定义代码块 hugo_paired_shortcodes: %myshortcode
     自定义的时候需要加%, 其他的与上面的一致

** hugo解析器支持的代码块
   https://gohugo.io/content-management/shortcodes/#shortcodes-without-markdown

   | key       | value           | desc                |
   |-----------+-----------------+---------------------|
   | +details+   | 折叠            | 使用hugo book       |
   | +figure+    | 图片            | org-mode自带        |
   | +gist+      |                 | hugo废弃的shortcode |
   | +highlight+ | 代码高亮        | org-mode自带的babel |
   | +instagram+ | 链接到instagram | 不使用instagram     |
   | +param+     |                 | 没使用场景          |
   | qr        | 二维码          |                     |
   | +ref+       | 链接            | org-mode自带        |
   | +relref+    | 链接            | org-mode自带        |
   | vimeo     | 链接到vimeo     |                     |
   | +X+         | 链接到X         | 没使用场景          |
   | youtube   | 链接到youtube   |                     |
   |-----------+-----------------+---------------------|

   : TODO 如果hugo解析器有, 但是hugo book不支持, 会怎么样??
** hugo book自身支持的代码块
   如果代码块同时被 hugo解析器 与 hugo book支持, 应该是hugo book的会覆盖hugo解析器效果

   https://hugo-book-demo.netlify.app/docs/shortcodes/buttons/

   | key     | value    | desc           |
   |---------+----------+----------------|
   | badges  | 标签     |                |
   | +button+  | 按钮     | org-mode自带   |
   | +card+    | 卡片     | 待定, 过于复杂 |
   | columns | 列       |                |
   | details | 折叠     |                |
   | hints   |          |                |
   | +images+  | 图片     | org-mode自带   |
   | mermaid | 画图     |                |
   | steps   |          |                |
   | tabs    |          | TODO: not work |
   | +katex+   | 数学公式 | 暂时用不到     |
   |---------+----------+----------------|
