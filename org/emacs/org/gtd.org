#+title: gtd
#+date: 2024-01-18 18:12:56
#+hugo_section: docs
#+hugo_bundle: emacs/org
#+export_file_name: gtd
#+hugo_weight: 2
#+hugo_draft: false
#+hugo_auto_set_lastmod: t

* 为什么要用GTD
  每天或每周需要处理的事情非常之多, 小到晚上要洗衣服, 大到明天项目交付. 这些事情如果都存储在脑中, 轻则
  焦虑不堪, 重则脑子爆炸. 而且脑中一旦塞满了这类事情, 非常不利于思考. 大脑应该是拿来思考的, 而不是用来存
  储的. 假设一种情形, 大脑只用来思考, 而存储则放在大脑之外, 那么我们就不必因当下之外的事情而焦虑, 能够更
  专一的处理当下的问题. 同时, 如果外在存储能够提醒我们何时该思考何问题, 那么我们也不会因错过了某事而悔恨
  ,比如女友生日. 而这也是GTD的目的所在, 大脑只用来思考, 存储在脑外.

  
* GTD是什么
** 人生5楼
   了解GTD之前, 必须了解人生5楼.

   | 楼数 | 功能     | 说明    | 备注    |
   |------+----------+---------+---------|
   | 5楼  | 人生规划 |         |         |
   |------+----------+---------+---------|
   | 4楼  | 3年目标  |         |         |
   |------+----------+---------+---------|
   | 3楼  | 1年目标  |         |         |
   |------+----------+---------+---------|
   | 2楼  | 职责范围 |         |         |
   |------+----------+---------+---------|
   | 1楼  | 项目     |         | GTD管理 |
   |------+----------+---------+---------|
   | 地面 | 行动清单 | 归属1楼 | GTD管理 |
   |------+----------+---------+---------|

   把人生(或部分人生)比喻成一座大厦, 1楼是我们当下要做的事情, 2楼是我们的职责范围, 3楼是我们1年后的样
   子, 4楼是我们3年后的样子, 5楼是我们人生(10年, 20年或一辈子)的规划.

   _我们的人生是高层决定了低层_. 比如, 如果想成为计算机专家(5楼), 那么3年后要先成为工程师(4楼), 1年后
   要先成为程序员(3楼). 为了要成为程序员, 也许我们需要去报班学习(2楼职责为学习),或者成为程序员助理(2楼职
   责为搬砖). 而1楼则是我们当下要确确实实需要处理的事情, 比如看书, 工作, 与同事交流等, 所有一切能对我们有
   提升的事情.

   _大厦是由低到高建造的_. 千里之行, 始于足下. 1楼的行为直接决定了能否达到后面的楼层.

   大厦最难的地方不在于实现5楼的规划, 而在于制定5楼的规划. 不过这也正是人生的魅力所在吧.
** GTD是什么
   GTD全名Getting things done, 它只是一种思想, 所能管理的是大厦的1楼.
   它的核心目的: 事物存储在脑外, 大脑用来思考.

   GTD的工作流程(算法)甚至文件(结构)都是可以自定义的. 适合的才是最好的.

   吐槽: 中文译本《Getting things done》满篇废话.

* GTD怎么实现
  GTD的实现方式非常之多, 有很多软件工具. 最喜欢的还是org-mode(emacs 插件).

