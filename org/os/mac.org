#+title: mac
#+date: 2024-06-04 14:36:29
#+hugo_section: docs
#+hugo_bundle: os/mac
#+export_file_name: index
#+hugo_weight: 1
#+hugo_draft: false
#+hugo_auto_set_lastmod: t
#+hugo_custom_front_matter: :bookCollapseSection false
#+hugo_paired_shortcodes: %qr, %vimeo
#+hugo_paired_shortcodes: badge, columns, details, hint, mermaid, steps, tabs, tab

* 界面整理
** Launchpad启动台
   #+begin_src shell -n
     # 每一列图标数量
     defaults write com.apple.dock springboard-rows -int 7

     # 每一行图标数量
     defaults write com.apple.dock springboard-columns -int 7

     # 重启Launchpad (重启时, 会使launchpad的排序恢复默认值)
     defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock

     # 添加空白到Dock栏
     defaults write com.apple.dock persistent-apps -array-add '{"tile-type"="spacer-tile";}'; killall Dock
   #+end_src
** 右上角状态栏
   按住Command之后, 鼠标可以拖动状态栏图标, 拖出即可删除
** 关闭内置键盘
   苹果内置键盘不好用, 但是触控板非常好用.
   习惯把HHKB放在苹果键盘上, 这样可以使用HHKB+苹果触控版

   #+BEGIN_EXAMPLE shell
   # For newer versions on MacOS / alternative solution:
   # List loaded kexts for keyboard
   kextstat | grep Keyboard
   # It's going to output something like:
   # 81    0 0xffffff7f833c5000 0xb000     0xb000     com.apple.driver.AppleHIDKeyboard (208) 96DDE905-9D31-38A9-96B7-FB28573587C8 <43 6 5 3>
   # com.apple.driver.AppleHIDKeyboard is loaded kext identifier.

   # If you want to plug-in Apple Magic Keyboard / some other Bluetooth keyboard, turn it off first. Then follow the instruction below.
   # To disable keyboard:
   sudo kextunload -b com.apple.driver.AppleHIDKeyboard
   # To enable it back:
   sudo kextload -b com.apple.driver.AppleHIDKeyboard
   #+END_EXAMPLE
* 软件推荐
  | 软件           | 介绍                                                   | 备注   |
  |----------------+--------------------------------------------------------+--------|
  | Alfred         | [[https://www.alfredapp.com][Alfred]] 是加强版的聚焦搜索                              |        |
  | +Karabiner+      | [[https://pqrs.org/index.html][Karabiner]] 是键位映射软件                               | 已舍弃 |
  | HomeBrew       | [[https://brew.sh/index_zh-cn][HomeBrew]] 是包管理软件(类似于ubuntu下的apt)             |        |
  | Annotate       | Annotate(AppStore下载)是截屏软件, 同时支持gif录制      |        |
  | IINA           | [[https://www.iina.io][IINA]] 是mac下好用的视频软件                             |        |
  | Better Display | [[https://github.com/waydabber/BetterDisplay][Better Display]]可以更好的控制显示器, 尤其是对于2K显示器 |        |
  |----------------+--------------------------------------------------------+--------|

* Q & A
** mac卡顿处理
   1. 删除Macintosh HD/系统/资源库/Caches中的文件
   2. 删除Macintosh HD/资源库/Caches中的文件
   3. 如果以上无效, 建议更换操作系统版本, 比如从macOS high sierra更换为macOS Mojave
** ssh远程连接macos, 中文乱码
   这种情况一般是终端和服务器的字符集不匹配.
   MacOSX下默认的是utf8字符集(locale查看)，而我的对应值是空的.

   1. 在.bash_profile中增加
      #+BEGIN_EXAMPLE
      export LC_ALL=en_US.UTF-8
      export LANG=en_US.UTF-8
      #+END_EXAMPLE
   2. source .bash_profile
   3. locale 查看下是否设置成功
** mac崩溃原因查找
   #+BEGIN_EXAMPLE shell
   # 打印mac 24小时崩溃的原因
   # 常见原因
   # 5 -- 正常关机
   # 3 -- 硬件关机 (holding the power button)
   log show --predicate 'eventMessage contains "Previous shutdown cause"' --last 24h
   #+END_EXAMPLE
** 开机启动
   mac没有像linux使用init作为系统管理, 而是使用Launchd
*** launchd
    定义一个由Launchd管理服务,
    首先要有一个适用于该运行环境的程序, 比如在系统启动过程中不能使用图形交互API, 那么与用户交互的程序就不能在系统启动过程中被调用.
    其次就是定制一个launchd规则的plist文件. 它是让launchd知道哪里以及如何运行一个程序,什么时候运行, 运行的规则等等等配置文件. 最后根据运行的方式, 把这个Plist文件存放到指定的位置, 并设置好文件属性等

    | 级别                   | 目录                          |
    |------------------------+-------------------------------|
    | 操作系统级别的服务程序 | /System/Library/LaunchDaemons |
    |                        | /System/Library/LaunchAgents  |
    |------------------------+-------------------------------|
    | 本机全局               | /Library/LaunchDaemons        |
    |                        | /Library/LaunchAgents         |
    |------------------------+-------------------------------|
    | 用户级别               | ~/Library/LaunchAgents        |
    |------------------------+-------------------------------|
    Daemons是一种无用户交互的服务程序, 而Agents是用户交互
    当系统启动时, 依次执行/System/Library/LaunchDaemons 和 /Library/LaunchDaemons
    当用户登陆时, 依次执行/System/Library/LaunchAgents, /Library/LaunchAgents 和 ~/Library/LaunchAgents
*** 操作流程
    1. 编写自己的脚本, 并添加可执行权限
       如果是Daemons调用, 需要给于777权限
    2. 编写plist文件
       #+BEGIN_EXAMPLE xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
    <dict>
        <key>Label</key>
        <string>com.user.loginscript</string>
        <key>ProgramArguments</key>
        <array>
            <string>/path/to/my/script.sh</string>
        </array>
        <key>RunAtLoad</key>
        <true/>
    </dict>
</plist>
       #+END_EXAMPLE
    3. 根据功能, plist文件放到不同的目录
    4. load plist
       : sudo launchctl load -w ~/Library/LaunchAgents/com.service.name.plist
    5. test
       : launchctl start com.user.loginscript
* test
  #+begin_center
  this is center
  #+end_center

  #+begin_example
  this is example
  #+end_example

  #+begin_quote
  this is quote
  #+end_quote

  #+begin_src artist -n
  this is artist
  #+end_src

  #+begin_src C++ -n
    class CPP {
      this_is_cpp();
    };
  #+end_src

  #+begin_src emacs-lisp -n
  (defun this_is_emacs_lisp () t)
  #+end_src

  #+begin_src plantuml :exports results :eval no-export :file xxx.png
    this is plantuml
  #+end_src
* test hugo
  下面的是qr
  #+begin_qr
  htpps://github.com
  #+end_qr

  下面的是vimeo1
  #+begin_vimeo
  55073825
  #+end_vimeo

  下面的是vimeo2, 使用attr_shortcode
  #+attr_shortcode: 55073825
  #+begin_vimeo

  #+end_vimeo

* test hugo book
  #+attr_shortcode: :style info :title this_is_badge :value 22
  #+begin_badge

  #+end_badge


  #+begin_columns
  this is columns
  1. abcoulomb
  2. sfsdf
  3. sadfdsf
  #+end_columns


  #+attr_shortcode: :open false :title this_is_details
  #+begin_details
  this is details s dsfadsfs
  #+end_details

  #+attr_shortcode: danger
  #+begin_hint
  this is hint
  #+end_hint

  #+begin_steps
  this is step
  1. one step
  2. two step
  3. three step
  #+end_steps

  #+begin_tabs
  #+attr_shortcode: Macos
  #+begin_tab
  this is macs
  #+end_tab

  #+attr_shortcode: windows
  #+begin_tab
  this is windows
  #+end_tab

  #+attr_shortcode: linux
  #+begin_tab
  this is linux
  #+end_tab
  #+end_tabs

  abc
